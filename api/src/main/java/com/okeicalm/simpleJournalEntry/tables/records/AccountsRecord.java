/*
 * This file is generated by jOOQ.
 */
package com.okeicalm.simpleJournalEntry.tables.records;


import com.okeicalm.simpleJournalEntry.tables.Accounts;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AccountsRecord extends UpdatableRecordImpl<AccountsRecord> implements Record4<Integer, String, String, Integer> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>simple_journal_entry_db.accounts.id</code>.
     */
    public AccountsRecord setId(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>simple_journal_entry_db.accounts.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>simple_journal_entry_db.accounts.code</code>.
     */
    public AccountsRecord setCode(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>simple_journal_entry_db.accounts.code</code>.
     */
    public String getCode() {
        return (String) get(1);
    }

    /**
     * Setter for <code>simple_journal_entry_db.accounts.name</code>.
     */
    public AccountsRecord setName(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>simple_journal_entry_db.accounts.name</code>.
     */
    public String getName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>simple_journal_entry_db.accounts.element_type</code>.
     */
    public AccountsRecord setElementType(Integer value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>simple_journal_entry_db.accounts.element_type</code>.
     */
    public Integer getElementType() {
        return (Integer) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<Integer, String, String, Integer> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<Integer, String, String, Integer> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Accounts.ACCOUNTS.ID;
    }

    @Override
    public Field<String> field2() {
        return Accounts.ACCOUNTS.CODE;
    }

    @Override
    public Field<String> field3() {
        return Accounts.ACCOUNTS.NAME;
    }

    @Override
    public Field<Integer> field4() {
        return Accounts.ACCOUNTS.ELEMENT_TYPE;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getCode();
    }

    @Override
    public String component3() {
        return getName();
    }

    @Override
    public Integer component4() {
        return getElementType();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getCode();
    }

    @Override
    public String value3() {
        return getName();
    }

    @Override
    public Integer value4() {
        return getElementType();
    }

    @Override
    public AccountsRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public AccountsRecord value2(String value) {
        setCode(value);
        return this;
    }

    @Override
    public AccountsRecord value3(String value) {
        setName(value);
        return this;
    }

    @Override
    public AccountsRecord value4(Integer value) {
        setElementType(value);
        return this;
    }

    @Override
    public AccountsRecord values(Integer value1, String value2, String value3, Integer value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached AccountsRecord
     */
    public AccountsRecord() {
        super(Accounts.ACCOUNTS);
    }

    /**
     * Create a detached, initialised AccountsRecord
     */
    public AccountsRecord(Integer id, String code, String name, Integer elementType) {
        super(Accounts.ACCOUNTS);

        setId(id);
        setCode(code);
        setName(name);
        setElementType(elementType);
    }

    /**
     * Create a detached, initialised AccountsRecord
     */
    public AccountsRecord(com.okeicalm.simpleJournalEntry.tables.pojos.Accounts value) {
        super(Accounts.ACCOUNTS);

        if (value != null) {
            setId(value.getId());
            setCode(value.getCode());
            setName(value.getName());
            setElementType(value.getElementType());
        }
    }
}
